{"componentChunkName":"component---src-templates-doc-template-js","path":"/docs/stacks/stack-structure","webpackCompilationHash":"40e946924eb5ded75513","result":{"data":{"markdownRemark":{"html":"<h2>Stack structure</h2>\n<pre><code class=\"language-bash\">my-stack\n├── README.md\n├── stack.yaml\n├── image/\n|   ├── project/\n|   |   └── Dockerfile\n│   └── Dockerfile-stack\n└── templates/\n    └── my-template/\n            └── .appsody-config.yaml\n</code></pre>\n<h2>Stack.yaml</h2>\n<p>The stack.yaml defines different components of the stack and which template the stack should use by default. See the example below:</p>\n<pre><code class=\"language-bash\">    id: sample-stack # short name for the stack, must be unique, will be used by the CLI\n    name: Sample Application Stack # concise one line name for the stack\n    version: 0.1.0 # version of the stack\n    description: sample stack to help creation of more appsody stacks # free form text explaining more about the capabilities of this stack and various templates\n    maintainer: John Smith &#x3C;example@example.com> # comma separated list for more than one maintainer\n    default-template: my-template # name of default template\n    license: Apache-2.0 # license for the stack\n</code></pre>\n<h2>Stack Image</h2>\n<p>Appsody application stacks are provided to developers as a Docker image and include a pre-configured technology stack ready to start application development. It also has mechanisms to control which aspects can and cannot be overridden by the developer.</p>\n<h3>Project directory:</h3>\n<p>The project folder should contain a production <a href=\"#Dockerfile\">Dockerfile</a> for your application and the project you are going to contribute as a content provider.</p>\n<h4>Dockerfile</h4>\n<p>Defines the final image that contains content from both the <a href=\"#Image\">image</a> and <a href=\"#Templates\">template</a>. This is used to run the application as a whole.</p>\n<h3>Dockerfile-stack:</h3>\n<p>The Dockerfile-stack defines the foundation application image, and a set of environment variables that specify the desired behaviour during local development cycle. It also defines what is exposed from the host machine to the container.</p>\n<p>Environment variables can be set to alter the behaviour of the CLI and controller.</p>\n<h2>Templates</h2>\n<p>A template is a pre-configured starter application that is ready to use with a particular image. It has access to all the dependencies supplied by that image and is able to include new functionality and extra dependencies to enhance the image where allowed.</p>\n<h3>.appsody-config.yaml</h3>\n<p>The <code>.appsody-config.yaml</code> allows you to specify the image which the template will use.\nFor example, the following specifies that the template will use the nodejs-express image: </p>\n<pre><code>stack: nodejs-express:0.2.0\n</code></pre>","frontmatter":{"path":"/docs/stacks/stack-structure"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"layout":"docs"}}}