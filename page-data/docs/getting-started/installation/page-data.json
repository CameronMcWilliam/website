{"componentChunkName":"component---src-templates-doc-template-js","path":"/docs/getting-started/installation","webpackCompilationHash":"f881337633836ff4da96","result":{"data":{"markdownRemark":{"html":"<h1>Installing Appsody</h1>\n<p>You can install Appsody on your system in a few easy steps by using our binary packages, which are available for macOS®, Ubuntu, Red Hat Enterprise Linux (RHEL), and Windows®.</p>\n<p>Because Appsody depends on Docker, ensure that you have <a href=\"https://docs.docker.com/get-started/\">Docker</a> installed and the Docker daemon running on your system.</p>\n<h2>Installing on macOS</h2>\n<p>Follow these steps:</p>\n<ol>\n<li>If you don't have the Xcode command line tools installed on your system, install them by running <code>xcode-select --install</code>.</li>\n<li>If you don't have Homebrew installed on your system, install it by running <code>/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"</code>.</li>\n<li>To install Appsody, run:</li>\n</ol>\n<pre><code>brew install appsody/appsody/appsody\n</code></pre>\n<p>This command creates a brew tap for the <code>appsody/appsody</code> repo and installs the <code>appsody</code> formula.</p>\n<p>That's all there is to it! You can now follow our <a href=\"/docs/getting-started/quick-start.md\">Quick Start</a> instructions to create your first containerized development environment with a running <em>Hello World!</em> application.</p>\n<p>To remove Appsody, run <code>brew uninstall appsody</code>. Optionally, remove the <code>.appsody</code> directory that gets created under your home directory: <code>rm -rf ~/.appsody</code>.</p>\n<h2>Installing on Ubuntu</h2>\n<p>Follow these steps:</p>\n<ol>\n<li>Your user account must be a member of the <code>docker</code> group, which you can configure by running <code>sudo usermod -aG docker &#x3C;username></code>.</li>\n<li>Download the latest <strong>Debian install package</strong> from the <a href=\"https://github.com/appsody/appsody/releases\">Appsody releases page</a>. The file is named <code>appsody_v.r.m_amd64.deb</code>, where <code>v.r.m</code> indicates the release tag.</li>\n<li>To install the package, run:</li>\n</ol>\n<pre><code>sudo apt install -f &#x3C;path>/appsody_v.r.m_amd64.deb\n</code></pre>\n<p>Where <code>&#x3C;path></code> is the fully qualified path to the package.</p>\n<p>That's all there is to it! You can now follow our <a href=\"/docs/getting-started/quick-start.md\">Quick Start</a> instructions to create your first containerized development environment with a running <em>Hello World!</em> application.</p>\n<p>To remove Appsody, run <code>sudo apt remove appsody</code>. Optionally, remove the <code>.appsody</code> directory that gets created under your home directory: <code>rm -rf ~/.appsody</code>.</p>\n<h2>Installing on RHEL</h2>\n<p>Follow these steps:</p>\n<ol>\n<li>Your user account must be a member of the <code>docker</code> group, which you can configure by running <code>sudo usermod -aG docker &#x3C;username></code>.</li>\n<li>Download the latest <strong>RPM install package</strong> from the <a href=\"https://github.com/appsody/appsody/releases\">Appsody releases page</a>. The file is named <code>appsody-v.r.m-1.x86_64.rpm</code>, where <code>v.r.m</code> indicates the release tag.</li>\n<li>To install the package, run:</li>\n</ol>\n<pre><code>sudo yum install &#x3C;path>/appsody-v.r.m-1.x86_64.rpm\n</code></pre>\n<p>Where <code>&#x3C;path></code> is the fully qualified path to the package.</p>\n<p>That's all there is to it! You can now follow our <a href=\"/docs/getting-started/quick-start.md\">Quick Start</a> instructions to create your first containerized development environment with a running <em>Hello World!</em> application.</p>\n<p>To remove Appsody, run <code>sudo yum remove appsody</code>. Optionally, remove the <code>.appsody</code> directory that gets created under your home directory: <code>rm -rf ~/.appsody</code>.</p>\n<h2>Installing on Windows</h2>\n<p>Note: Appsody runs only on Windows 10.</p>\n<p>Follow these steps:</p>\n<ol>\n<li>Create a directory for Appsody on your Windows 10 system.</li>\n<li>Download the <strong>Appsody binaries for Windows</strong> from the <a href=\"https://github.com/appsody/appsody/releases\">Appsody releases page</a> into the directory. The file is named <code>appsody-v.r.m-windows.tar</code>, where <code>v.r.m</code> indicates the release tag.</li>\n<li>Extract the files by running <code>tar -xvf appsody-v.r.m-windows.tar</code>.</li>\n<li>To install Appsody, run the following setup command:</li>\n</ol>\n<pre><code>appsody-setup.bat\n</code></pre>\n<p>That's all there is to it! You can now follow our <a href=\"/docs/getting-started/quick-start.md\">Quick Start</a> instructions to create your first containerized development environment with a running <em>Hello World!</em> application.</p>\n<p>To uninstall Appsody, delete the directory where you extracted the binaries. Optionally, remove the <code>.appsody</code> directory that gets created under your home folder and the <strong>PATH</strong> entry that was created by the setup command (see <a href=\"https://www.architectryan.com/2018/03/17/add-to-the-path-on-windows-10/\">Modifying the PATH on Windows 10</a>).</p>\n<h2>Running Appsody with SELinux</h2>\n<p>If you are running Security-Enhanced Linux, you may experience problems when running Appsody, because the Docker daemon - although it runs as <code>root</code> - may not be able to access the folders that are mounted from the host file system.</p>\n<p>The manifestation of these problems include errors such as those reported in the snippet below.</p>\n<pre><code>Container] [Warning] Failed to add directory to recursive watch list: /project/user-appopen /project/user-app: permission denied\nnpm ERR! path /project/user-app/package.json\n[Container] npm ERR! code EACCES\n[Container] npm ERR! errno -13\n[Container] npm ERR! syscall open\n[Container] npm ERR! Error: EACCES: permission denied, open '/project/user-app/package.json'\n</code></pre>\n<p>In order to check whether you have SELinux enabled and enforcing its policies, you can run <code>sestatus</code>. The output of this command includes the <code>Current Mode</code> of SELinux. If it is set to <code>enforcing</code>, and you see errors similar to those in the snippet above, you may need to change your SELinux configuration.</p>\n<p>This can be done by exempting the folders mounted by the stacks you are using, through the following command:</p>\n<pre><code>chcon -Rt svirt_sandbox_file_t &#x3C;/path/to/volume>\n</code></pre>\n<p>You may need to run this command multiple times, to whitelist different paths, depending on your setup, and on the mount points of the specific stack you are using.</p>\n<p>In general - however - you should be required to run the command at most twice:</p>\n<ul>\n<li>For your home directory</li>\n<li>For the directory where your Appsody project is located (assuming this isn't under your home)</li>\n</ul>\n<p>If you are unsure about which directories are mounted by the stack you are using, you can inspect the output of the <code>appsody run</code> command, and look at the <code>-v</code> parameters in the <code>docker run</code> command. For example:</p>\n<pre><code>[ibmadmin@naval1 my-project]$ appsody run\nRunning development environment...\nRunning command: docker[pull appsody/nodejs-express:0.2]\nRunning command: docker[run --rm -p 3000:3000 -p 9229:9229 --name my-project-dev -v /home/ibmadmin/appsody/my-project/:/project/user-app -v my-project-deps:/project/user-app/node_modules -v /home/ibmadmin/.appsody/appsody-controller:/appsody/appsody-controller -t --entrypoint /appsody/appsody-controller appsody/nodejs-express:0.2 --mode=run]\n</code></pre>\n<p>In the example above, there are two binding mounts:</p>\n<ul>\n<li>/home/ibmadmin/appsody/my-project/</li>\n<li>/home/ibmadmin/.appsody/appsody-controller</li>\n</ul>\n<p>In this case, whitelisting the home directory (<code>/home/ibmadmin</code>) would be sufficient.</p>","frontmatter":{"path":"/docs/getting-started/installation"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"layout":"docs"}}}